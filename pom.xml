<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>tech.zhizheng</groupId>
        <artifactId>bom</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>tech.yizhichan</groupId>
    <artifactId>yizhichan-sdk</artifactId>
    <version>${revision}</version>
    <name>yizhichan SDK</name>
    <description>yizhichan serverless SDK</description>

    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>tech.zhizheng</groupId>
            <artifactId>model</artifactId>
        </dependency>
        <dependency>
            <groupId>tech.zhizheng</groupId>
            <artifactId>common-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>tech.zhizheng</groupId>
            <artifactId>openapi-client-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy</artifactId>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.apache.groovy</groupId>-->
        <!--            <artifactId>groovy-sql</artifactId>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.groovy</groupId>-->
        <!--            <artifactId>groovy-datetime</artifactId>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.groovy</groupId>-->
        <!--            <artifactId>groovy-servlet</artifactId>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.craftercms</groupId>
            <artifactId>groovy-sandbox</artifactId>
        </dependency>

        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--spring相关-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--spring cloud相关-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>bytekit-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>bytekit-instrument-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <!-- 避免IDE将 .flattened-pom.xml 自动识别为功能模块 -->
                    <flattenedPomFilename>pom-xml-flattened</flattenedPomFilename>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.30</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.5.5.Final</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
<!--             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.6.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                    <obfuscate>true</obfuscate>
                    <appendClassifier>false</appendClassifier>
                    <attachArtifactClassifier></attachArtifactClassifier>
                    <options>
                        <option>-dontshrink</option>
                        <option>-dontoptimize</option>
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>
                        <option>-dontusemixedcaseclassnames</option>
                        <option>-allowaccessmodification</option>
                        <option>-useuniqueclassmembernames</option>
                        <option>-adaptclassstrings </option>
                        <option>-ignorewarnings</option>
                        <option>-keepdirectories</option>
                        <option>-keeppackagenames</option>
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
                        <!-- This option will save all original names in interfaces (without obfuscate).-->
                        <option>-keepnames interface **</option>
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>
                        <option>-keep class * implements java.io.Serializable </option>
                        <option>-keep interface * extends * { *; }</option>
                        <option>-keepclassmembers class * {
                            <!-- @org.springframework.beans.factory.annotation.Autowired *; -->
                            @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                        <option>-keepnames class tech.yizhichan.sdk.annotation.**</option>
                        <option>-keep class tech.yizhichan.sdk.config.** { *; }</option>
                        <option>-keep class tech.yizhichan.sdk.apiclient.** { *; }</option>
                        <option>-keep class tech.yizhichan.sdk.interceptor.**</option>
                        <option>-keep class tech.yizhichan.sdk.queue.**</option>
                        <option>-keep class * implements tech.yizhichan.sdk.listener.SseDataStreamListener</option>
                        <option>-keep class tech.yizhichan.sdk.core.compiler.DynamicPackageScanner</option>
                        <option>-keep class tech.yizhichan.sdk.generic.openfeign.DynamicFeignClient</option>
                        <option>-ignorewarnings</option>
                        <option>-dontnote</option>
                    </options>
                    <libs>
                        <lib>${java.home}/jmods</lib>
                    </libs>
                    <injar>${project.artifactId}-${project.version}.jar</injar>
                </configuration>
            </plugin>
        </plugins>
    </build>

<!--    <distributionManagement>-->
<!--        <repository>-->
<!--            <id>nexus</id>-->
<!--            <name>maven-releases</name>-->
<!--            <url>http://${nexus.address}/repository/maven-releases/</url>-->
<!--        </repository>-->
<!--        <snapshotRepository>-->
<!--            <id>nexus</id>-->
<!--            <name>maven-snapshots</name>-->
<!--            <url>http://${nexus.address}/repository/maven-snapshots/</url>-->
<!--        </snapshotRepository>-->
<!--    </distributionManagement>-->
</project>
